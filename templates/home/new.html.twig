{% extends 'base.html.twig' %}
{% block body %}
<!-- Contact-->
<section class="page-section bg-admission bg-tour-effeil" style="margin-top: 6rem; padding: 4rem 0;">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-lg-8 text-center">
                <h2 class="text-white mt-0 ml-1">Les plus de nos services</h2>
                <hr class="divider divider-light" />
                <ul class="text-white" style="list-style-type: none; padding-inline-start: 0px;">
                    <li>Plus de 50 écoles partenaires</li>
                    <li>Aucun frais d’agence, service totalement gratuit</li>
                    <li>Accompagnement jusqu’à l’obtention de visa </li>
                    <li>Et plus encore….</li>
                </ul>
            </div>
        </div>
    </div>
</section>
<section class="page-section" id="contact">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-lg-8 col-xl-6 text-center">
                <p class="text-muted mb-5">Aidez-nous à vous aider, répondez à ces quelques questions</p>
            </div>
        </div>
        <div class="row gx-4 gx-lg-5 justify-content-center mb-5">
            <div class="col-lg-6">
                {{ form_start(form, { 'attr': { 'id': 'assertion_form' } }) }}

                <div class="isTcf">
                    {{ form_row(form.isTcf) }}
                </div>
                <div class="tcfScore" style="display: none;">
                    {{ form_row(form.tcfScore) }}
                </div>
                <div class="studyField">
                    {{ form_row(form.studyField) }}
                </div>
                <div class="studyLevel">
                    {{ form_row(form.studyLevel) }}
                </div>
                <div class="whereToStudy">
                    {{ form_row(form.whereToStudy) }}
                </div>
                <div class="otherWhereToStudy" style="display: none;">
                    {{ form_row(form.otherWhereToStudy) }}
                </div>
                <div class="isReorientation">
                    {{ form_row(form.isReorientation) }}
                </div>
                <div class="reorientationDetail" style="display: none;">
                    {{ form_row(form.reorientationDetail) }}
                </div>
                <div class="reorientationDetailExtended" style="display: none;">
                    {{ form_row(form.reorientationDetailExtended) }}
                </div>
                <div class="isPaidInAdvance">
                    {{ form_row(form.isPaidInAdvance) }}
                </div>
                <div class="isAssertToOtherSchool">
                    {{ form_row(form.isAssertToOtherSchool) }}
                </div>
                <div class="assertToOtherSchoolName" style="display: none;">
                    {{ form_row(form.assertToOtherSchoolName) }}
                </div>
                <div class="assertToOtherSchoolNoWhy" style="display: none;">
                    {{ form_row(form.assertToOtherSchoolNoWhy) }}
                </div>
                <div class="assertToOtherSchoolNoWhyOther" style="display: none;">
                    {{ form_row(form.assertToOtherSchoolNoWhyOther) }}
                </div>
                <div class="firstName">
                    {{ form_row(form.firstName) }}
                </div>
                <div class="familyName">
                    {{ form_row(form.familyName) }}
                </div>
                <div class="email">
                    {{ form_row(form.email) }}
                </div>
                <div class="confirm_email">
                    {{ form_row(form.confirm_email) }}
                </div>
                <div class="nationality">
                    {{ form_row(form.nationality) }}
                </div>
                <div class="city">
                    {{ form_row(form.city) }}
                </div>
                <div class="phoneNumber">
                    {{ form_row(form.phoneNumber) }}
                </div>
                <div class="position">
                    {{ form_row(form.position) }}
                </div>
                <div class="positionOther" style="display: none;">
                    {{ form_row(form.positionOther) }}
                </div>
                <div class="howDidYouKnowOurAgency">
                    {{ form_row(form.howDidYouKnowOurAgency) }}
                </div>
                <div class="howDidYouKnowOurAgencyOther" style="display: none;">
                    {{ form_row(form.howDidYouKnowOurAgencyOther) }}
                </div>
                <button class="btn btn-secondary mt-4">Envoyer</button>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</section>
<script>
    function isTcfToggleElement() {
        var radioInput = document.querySelector('input[name="assertion[isTcf]"]:checked');
        var tcfScore = document.querySelector('.tcfScore');
        if (tcfScore) {
            if (radioInput && radioInput.value == 1) {
                tcfScore.style.display = 'block';
            } else {
                tcfScore.style.display = 'none';
            }
        }
    }
    var isTcfRadioInputs = document.querySelectorAll('input[name="assertion[isTcf]"]');
    isTcfRadioInputs.forEach(function (input) {
        input.addEventListener('change', isTcfToggleElement);
    });

    function whereToStudyToggleElement() {
        var radioInput = document.querySelector('input[name="assertion[whereToStudy]"]:checked');
        var otherWhereToStudy = document.querySelector('.otherWhereToStudy');
        if (otherWhereToStudy) {
            if (radioInput && radioInput.value == 2) {
                otherWhereToStudy.style.display = 'block';
            } else {
                otherWhereToStudy.style.display = 'none';
            }
        }
    }
    var whereToStudyRadioInputs = document.querySelectorAll('input[name="assertion[whereToStudy]"]');
    whereToStudyRadioInputs.forEach(function (input) {
        input.addEventListener('change', whereToStudyToggleElement);
    });

    function isReorientationToggleElement() {
        var radioInput = document.querySelector('input[name="assertion[isReorientation]"]:checked');
        var reorientationDetail = document.querySelector('.reorientationDetail');
        if (reorientationDetail) {
            if (radioInput && radioInput.value == 1) {
                reorientationDetail.style.display = 'block';
            } else {
                reorientationDetail.style.display = 'none';
            }
        }
    }
    var isReorientationRadioInputs = document.querySelectorAll('input[name="assertion[isReorientation]"]');
    isReorientationRadioInputs.forEach(function (input) {
        input.addEventListener('change', isReorientationToggleElement);
    });

    function reorientationDetailToggleElement(event) {
        var reorientationDetailExtended = document.querySelector('.reorientationDetailExtended');
        const selectedValue = event.target.value;
        if (selectedValue == 'Autre') {
            reorientationDetailExtended.style.display = 'block';
        } else {
            reorientationDetailExtended.style.display = 'none';
        }
    }
    const reorientationDetailInput = document.getElementById('assertion_reorientationDetail');
    if (reorientationDetailInput) {
        reorientationDetailInput.addEventListener('change', reorientationDetailToggleElement);
    }

    function isAssertToOtherSchoolToggleElement() {
        var radioInput = document.querySelector('input[name="assertion[isAssertToOtherSchool]"]:checked');
        var assertToOtherSchoolName = document.querySelector('.assertToOtherSchoolName');
        var assertToOtherSchoolNoWhy = document.querySelector('.assertToOtherSchoolNoWhy');
        if (assertToOtherSchoolName && assertToOtherSchoolNoWhy) {
            if (radioInput && radioInput.value == 1) {
                assertToOtherSchoolName.style.display = 'block';
                assertToOtherSchoolNoWhy.style.display = 'none';
            } else {
                assertToOtherSchoolNoWhy.style.display = 'block';
                assertToOtherSchoolName.style.display = 'none';
            }
        }
    }
    var isAssertToOtherSchoolRadioInputs = document.querySelectorAll('input[name="assertion[isAssertToOtherSchool]"]');
    isAssertToOtherSchoolRadioInputs.forEach(function (input) {
        input.addEventListener('change', isAssertToOtherSchoolToggleElement);
    });


    function assertToOtherSchoolNoWhyToggleElement(event) {
        var assertToOtherSchoolNoWhyOther = document.querySelector('.assertToOtherSchoolNoWhyOther');
        const selectedValue = event.target.value;
        if (selectedValue == 'Autre') {
            assertToOtherSchoolNoWhyOther.style.display = 'block';
        } else {
            assertToOtherSchoolNoWhyOther.style.display = 'none';
        }
    }
    const assertToOtherSchoolNoWhyInput = document.getElementById('assertion_assertToOtherSchoolNoWhy');
    if (assertToOtherSchoolNoWhyInput) {
        assertToOtherSchoolNoWhyInput.addEventListener('change', assertToOtherSchoolNoWhyToggleElement);
    }

    function positionToggleElement(event) {
        var positionOther = document.querySelector('.positionOther');
        const selectedValue = event.target.value;
        if (selectedValue == 'Autre') {
            positionOther.style.display = 'block';
        } else {
            positionOther.style.display = 'none';
        }
    }
    const positionInput = document.getElementById('assertion_position');
    if (positionInput) {
        positionInput.addEventListener('change', positionToggleElement);
    }


    function howDidYouKnowOurAgencyToggleElement(event) {
        var howDidYouKnowOurAgencyOther = document.querySelector('.howDidYouKnowOurAgencyOther');
        const selectedValue = event.target.value;
        if (selectedValue == 4) {
            howDidYouKnowOurAgencyOther.style.display = 'block';
        } else {
            howDidYouKnowOurAgencyOther.style.display = 'none';
        }
    }
    const howDidYouKnowOurAgencyInput = document.getElementById('assertion_howDidYouKnowOurAgency');
    if (howDidYouKnowOurAgencyInput) {
        howDidYouKnowOurAgencyInput.addEventListener('change', howDidYouKnowOurAgencyToggleElement);
    }
    const form = document.getElementById('assertion_form');
    const email = document.getElementById('assertion_email');
    const confirmEmail = document.getElementById('assertion_confirm_email');
    if (form) {
        form.addEventListener('submit', function (event) {
            if (email.value !== confirmEmail.value) {
                event.preventDefault();
                alert('Veuillez corriger votre adresse e-mail');
            }
        });
    }
</script>
{% endblock %}